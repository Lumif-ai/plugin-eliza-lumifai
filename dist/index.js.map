{"version":3,"sources":["../src/actions/webSearch.ts","../src/services/webSearchService.ts","../src/index.ts"],"sourcesContent":["import {\n    type Action,\n    type HandlerCallback,\n    type IAgentRuntime,\n    type Memory,\n    type State,\n    elizaLogger\n} from \"@elizaos/core\";\nimport { encodingForModel, type TiktokenModel } from \"js-tiktoken\";\nimport { WebSearchService } from \"../services/webSearchService\";\nimport type { SearchResult } from \"../types\";\n\nconst DEFAULT_MAX_WEB_SEARCH_TOKENS = 4000;\nconst DEFAULT_MODEL_ENCODING = \"gpt-3.5-turbo\";\n\nfunction getTotalTokensFromString(\n    str: string,\n    encodingName: TiktokenModel = DEFAULT_MODEL_ENCODING\n) {\n    const encoding = encodingForModel(encodingName);\n    return encoding.encode(str).length;\n}\n\nfunction MaxTokens(\n    data: string,\n    maxTokens: number = DEFAULT_MAX_WEB_SEARCH_TOKENS\n): string {\n    if (getTotalTokensFromString(data) >= maxTokens) {\n        return data.slice(0, maxTokens);\n    }\n    return data;\n}\n\nexport const webSearch: Action = {\n    name: \"WEB_SEARCH\",\n    similes: [\n        \"SEARCH_WEB\",\n        \"INTERNET_SEARCH\",\n        \"LOOKUP\",\n        \"QUERY_WEB\",\n        \"FIND_ONLINE\",\n        \"SEARCH_ENGINE\",\n        \"WEB_LOOKUP\",\n        \"ONLINE_SEARCH\",\n        \"FIND_INFORMATION\",\n    ],\n    suppressInitialMessage: true,\n    description:\n        \"Perform a web search to find information related to the message.\",\n    // eslint-disable-next-line\n    validate: async (runtime: IAgentRuntime, message: Memory) => {\n        const tavilyApiKeyOk = !!runtime.getSetting(\"TAVILY_API_KEY\");\n\n        return tavilyApiKeyOk;\n    },\n    handler: async (\n        runtime: IAgentRuntime,\n        message: Memory,\n        state: State,\n        options: any,\n        callback: HandlerCallback\n    ) => {\n        elizaLogger.log(\"Composing state for message:\", message);\n        state = (await runtime.composeState(message)) as State;\n        const userId = runtime.agentId;\n        elizaLogger.log(\"User ID:\", userId);\n\n        const webSearchPrompt = message.content.text;\n        elizaLogger.log(\"web search prompt received:\", webSearchPrompt);\n\n        const webSearchService = new WebSearchService();\n        await webSearchService.initialize(runtime);\n        const searchResponse = await webSearchService.search(\n            webSearchPrompt,\n        );\n\n        if (searchResponse && searchResponse.results.length) {\n            const responseList = searchResponse.answer\n                ? `${searchResponse.answer}${\n                      Array.isArray(searchResponse.results) &&\n                      searchResponse.results.length > 0\n                          ? `\\n\\nFor more details, you can check out these resources:\\n${searchResponse.results\n                                .map(\n                                    (result: SearchResult, index: number) =>\n                                        `${index + 1}. [${result.title}](${result.url})`\n                                )\n                                .join(\"\\n\")}`\n                          : \"\"\n                  }`\n                : \"\";\n\n            callback({\n                text: MaxTokens(responseList, DEFAULT_MAX_WEB_SEARCH_TOKENS),\n            });\n        } else {\n            elizaLogger.error(\"search failed or returned no data.\");\n        }\n    },\n    examples: [\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Find the latest news about SpaceX launches.\",\n                },\n            },\n            {\n                user: \"{{agentName}}\",\n                content: {\n                    text: \"Here is the latest news about SpaceX launches:\",\n                    action: \"WEB_SEARCH\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"Can you find details about the iPhone 16 release?\",\n                },\n            },\n            {\n                user: \"{{agentName}}\",\n                content: {\n                    text: \"Here are the details I found about the iPhone 16 release:\",\n                    action: \"WEB_SEARCH\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"What is the schedule for the next FIFA World Cup?\",\n                },\n            },\n            {\n                user: \"{{agentName}}\",\n                content: {\n                    text: \"Here is the schedule for the next FIFA World Cup:\",\n                    action: \"WEB_SEARCH\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: { text: \"Check the latest stock price of Tesla.\" },\n            },\n            {\n                user: \"{{agentName}}\",\n                content: {\n                    text: \"Here is the latest stock price of Tesla I found:\",\n                    action: \"WEB_SEARCH\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"What are the current trending movies in the US?\",\n                },\n            },\n            {\n                user: \"{{agentName}}\",\n                content: {\n                    text: \"Here are the current trending movies in the US:\",\n                    action: \"WEB_SEARCH\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: {\n                    text: \"What is the latest score in the NBA finals?\",\n                },\n            },\n            {\n                user: \"{{agentName}}\",\n                content: {\n                    text: \"Here is the latest score from the NBA finals:\",\n                    action: \"WEB_SEARCH\",\n                },\n            },\n        ],\n        [\n            {\n                user: \"{{user1}}\",\n                content: { text: \"When is the next Apple keynote event?\" },\n            },\n            {\n                user: \"{{agentName}}\",\n                content: {\n                    text: \"Here is the information about the next Apple keynote event:\",\n                    action: \"WEB_SEARCH\",\n                },\n            },\n        ],\n    ],\n} as Action;","import {\n    Service,\n    type IAgentRuntime,\n    ServiceType,\n} from \"@elizaos/core\";\nimport { tavily } from \"@tavily/core\";\nimport type { IWebSearchService, SearchOptions, SearchResponse } from \"../types\";\n\nexport type TavilyClient = ReturnType<typeof tavily>; // declaring manually because original package does not export its types\n\nexport class WebSearchService extends Service implements IWebSearchService {\n    public tavilyClient: TavilyClient\n\n    async initialize(_runtime: IAgentRuntime): Promise<void> {\n        const apiKey = _runtime.getSetting(\"TAVILY_API_KEY\") as string;\n        if (!apiKey) {\n            throw new Error(\"TAVILY_API_KEY is not set\");\n        }\n        this.tavilyClient = tavily({ apiKey });\n    }\n\n    getInstance(): IWebSearchService {\n        return WebSearchService.getInstance();\n    }\n\n    static get serviceType(): ServiceType {\n        return ServiceType.WEB_SEARCH;\n    }\n\n    async search(\n        query: string,\n        options?: SearchOptions,\n    ): Promise<SearchResponse> {\n        try {\n            const response = await this.tavilyClient.search(query, {\n                includeAnswer: options?.includeAnswer || true,\n                maxResults: options?.limit || 3,\n                topic: options?.type || \"general\",\n                searchDepth: options?.searchDepth || \"basic\",\n                includeImages: options?.includeImages || false,\n                days: options?.days || 3,\n            });\n\n            return response;\n        } catch (error) {\n            console.error(\"Web search error:\", error);\n            throw error;\n        }\n    }\n}\n","import { webSearch } from \"./actions/webSearch\";\nimport { WebSearchService } from \"./services/webSearchService\";\n\nexport const webSearchPlugin = {\n    name: \"webSearch\",\n    description: \"Search the web and get news\",\n    actions: [webSearch],\n    evaluators: [],\n    providers: [],\n    services: [new WebSearchService() as any],\n    clients: [],\n    adapters: [],\n};\n\nexport default webSearchPlugin;\n"],"mappings":"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","names":[]}